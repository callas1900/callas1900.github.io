<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VBScript on callas1900.net</title>
    <link>/tags/vbscript/</link>
    <description>Recent content in VBScript on callas1900.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2006-2019 callas1900.net All rights reserved.</copyright>
    <lastBuildDate>Thu, 08 Jul 2010 13:55:00 +0900</lastBuildDate>
    
	<atom:link href="/tags/vbscript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[JavaScript][VBScript]VBScript &#43; Javascriptで簡単プロジェクト内ツール。その２</title>
      <link>/posts/2010/07/08/javascriptvbscriptvbscript-javascript%E3%81%A7%E7%B0%A1%E5%8D%98%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%86%85%E3%83%84%E3%83%BC%E3%83%AB%E3%81%9D%E3%81%AE%EF%BC%92/</link>
      <pubDate>Thu, 08 Jul 2010 13:55:00 +0900</pubDate>
      
      <guid>/posts/2010/07/08/javascriptvbscriptvbscript-javascript%E3%81%A7%E7%B0%A1%E5%8D%98%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%86%85%E3%83%84%E3%83%BC%E3%83%AB%E3%81%9D%E3%81%AE%EF%BC%92/</guid>
      <description>０埋めはsliceを使え。 数値の０埋め処理のやり方
３桁０埋め
function zeroPadding3(num){ return (&amp;quot;000&amp;quot; + num).slice(-3); } 日付型は6/31日とかセットするとちゃんと7/1になってくれる。 //月は0で1月、5で6月 alert(new Date(2010,5,31)); 実行結果
Thu Jul 1 00:00:00 UTC+0900 2010
ショートカットを実装するにはshortcuts.jsが便利。 サンプル
shortcut.add(&amp;quot;Ctrl+B&amp;quot;,function() { alert(&amp;quot;The bookmarks of your browser will show up after this alert...&amp;quot;); } 参考URL:
http://www.openjs.com/scripts/events/keyboard_shortcuts/#add_docs
setTimeoutの繰り返しは自己呼び出しで function hoge(){ alert(&amp;quot;hoge&amp;quot;); setTimeout(hoge,1000); } ただしこれをhogeと関数オブジェクトで呼び出さずに
hoge()とするとブラウザが壊れるので要注意。
以上で細々とした備忘終わり。</description>
    </item>
    
    <item>
      <title>[JavaScript][VBScript]VBScript &#43; Javascriptで簡単プロジェクト内ツール。その１</title>
      <link>/posts/2010/07/08/javascriptvbscriptvbscript-javascript%E3%81%A7%E7%B0%A1%E5%8D%98%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%86%85%E3%83%84%E3%83%BC%E3%83%AB%E3%81%9D%E3%81%AE%EF%BC%91/</link>
      <pubDate>Thu, 08 Jul 2010 13:44:00 +0900</pubDate>
      
      <guid>/posts/2010/07/08/javascriptvbscriptvbscript-javascript%E3%81%A7%E7%B0%A1%E5%8D%98%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%86%85%E3%83%84%E3%83%BC%E3%83%AB%E3%81%9D%E3%81%AE%EF%BC%91/</guid>
      <description>プロジェクトでIE6上で動く VBScript + JavaScript + HTML のツールを作ってみた。
なんで今更？IE6？
会社の中では未だに頑固にIE6が標準だーって会社は多いのさ。
本当は HTML5 + JavaScript で作りたかったけど仕方ない。
会社のみんなにChromeやFireFoxを強制的にインストールさせるのは面倒だからね。
要件はある固定長インターフェースファイルを使ったテスト用に、
 テキストファイルを別のフォーマットに変えてくれ。(ファイルI/O) 要件は流動的に変わる。インクリメンタルにイテレーティブに。 実装工数はインフラの空き時間を使って。  この用件ならhttpアクセスで画面はHTMLインターフェースでやるのが適当かなと思った。
ついでに皆標準的に入れてるブラウザはIE6。
ファイル I/O　部位を VBScript に任し、
他の挙動を JavaScript で制御するのが適当か？
以下その場合の注意点
VBScript のファイルI/Oを有効化するにはIE6の設定変更が必要  メニューバーの【ツール(T)】より【インターネットオプション】を起動します。 【セキュリティ】タブを選択し、【レベルのカスタマイズ(C)&amp;hellip;】ボタンをクリックします。 【スクリプトを実行しても安全だとマークされている ActiveXコントロールのスクリプト実行】を有効にします。  これを画面の最下部に常に表記。
で、まずはFile I/O部のVBScriptコード
注意点は読み込んだ内容をJavaScriptに渡す場合、
配列渡しはうまくいかなかったので、
適当な区切り文字をはさんで渡し、JavaScript側でSpritしたことと、
動的な配列が定義出来なかったのでReDimとPreserveを多様したこと
書き込み Function FileOutput(FULLPATH,TXT) Dim objFSO, objFile Set objFSO = CreateObject(&amp;quot;Scripting.FileSystemObject&amp;quot;) If Err.Number = 0 Then Set objFile = objFSO.OpenTextFile(FULLPATH, 8, True) If Err.Number = 0 Then objFile.</description>
    </item>
    
  </channel>
</rss>