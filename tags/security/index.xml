<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on callas1900.net</title>
    <link>/tags/security/</link>
    <description>Recent content in Security on callas1900.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2006-2019 callas1900.net All rights reserved.</copyright>
    <lastBuildDate>Mon, 01 Oct 2012 09:00:00 +0900</lastBuildDate>
    
	<atom:link href="/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Androidで共通鍵暗号化でつまづいたので記録に残す</title>
      <link>/posts/2012/10/01/android%E3%81%A7%E5%85%B1%E9%80%9A%E9%8D%B5%E6%9A%97%E5%8F%B7%E5%8C%96%E3%81%A7%E3%81%A4%E3%81%BE%E3%81%A5%E3%81%84%E3%81%9F%E3%81%AE%E3%81%A7%E8%A8%98%E9%8C%B2%E3%81%AB%E6%AE%8B%E3%81%99/</link>
      <pubDate>Mon, 01 Oct 2012 09:00:00 +0900</pubDate>
      
      <guid>/posts/2012/10/01/android%E3%81%A7%E5%85%B1%E9%80%9A%E9%8D%B5%E6%9A%97%E5%8F%B7%E5%8C%96%E3%81%A7%E3%81%A4%E3%81%BE%E3%81%A5%E3%81%84%E3%81%9F%E3%81%AE%E3%81%A7%E8%A8%98%E9%8C%B2%E3%81%AB%E6%AE%8B%E3%81%99/</guid>
      <description>Androidで文字列をセキュアに保存したい場合、
暗号化してsqliteに保存するのがよろしいと思われる。
ここではAndroid自体のセキュリティがアレだとか、Rooted端末とapktoolがあればアレをこうしてアレ出来るだとかいう話はとりあえず置いとく。
まず以下のようなソースを書いた。
内容は、
 共通鍵の秘密鍵を生成している箇所のみ抽出。 DBに鍵が保存されていない初回はif文を迂回して生成ロジックで生成後DBに保存。 DB保存後はDBから復元する。  private final static String ARGOLISM = &amp;quot;PBEWithSHA1And256BitAES-CBC-BC&amp;quot;; private SecretKey getSecretKey() throws NoSuchAlgorithmException, InvalidKeySpecException, NameNotFoundException { // check saved secret key is exist. byte\[\] savedSecretKey = DBHelper.readByteData(context, &amp;quot;hoge&amp;quot;); if(savedSecretKey != null &amp;amp;&amp;amp; savedSecretKey.length &amp;gt; 0){ return new SecretKeySpec(savedSecretKey, ARGOLISM); } // generate new secret key. char\[\] pw = generatePassword(); int iteratorCount = 1024; int keySize = 256; int saltLength = 8; byte\[\] salt = &amp;quot;00000000&amp;quot;.</description>
    </item>
    
  </channel>
</rss>